package biactiva.services.ejecutores;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import biactiva.services.convertidos.csvAJson.AbstractJsonRestEstructura;
import biactiva.services.singletons.RecEntAct;






public class ParalelizadorDistintosFicheros {
	public static int y=0;
	public static int z=0;
	
	public void insertar() throws InterruptedException, IOException{

			        	try {
			        		File f= new File(RecEntAct.getInstance().getCep().getPathInformacion());
				        	ConvertidosJSONCSV csvThread= new ConvertidosJSONCSV();
			        		AbstractJsonRestEstructura jsonEst=null;
			        		while(!csvThread.isFin()){
			        			jsonEst = csvThread.convertirCSVaJSONLineaALineaIncidentes(file);
			        			if(jsonEst != null && jsonEst.validarCampos()){
				        			Ejecutor e= new Ejecutor();
				        			e.ejecutar(RecuperadorPropiedadedConfiguracionEntidad.getInstance().getMetodoEjecutor(),RecuperadorPropiedadedConfiguracionEntidad.getInstance().getParametroEjecutor(),jsonEst);
			        			}
			    				Contador.x++;
			    				System.out.println(Contador.x);
			    				if(Contador.x%1000==0){
			    			  		FileWriter fw = new FileWriter(DirectorioManager.getDirectorioFechaYHoraInicio("cantidadProcesada.txt"));
			    		    		fw.write("el proceso lleva procesado un total de: "+Contador.x+" Registros");
			    		    		fw.close();
			    		    		System.out.println("el proceso lleva procesado un total de: "+Contador.x+" Registros");
			    				}
			        		}
			        		}
			        	catch (Exception e) {
							e.printStackTrace();
						}
						return null;
			        }
		}

}
